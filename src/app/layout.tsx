// Start MSW Node in E2E mode (runs on the server)
if (process.env.NEXT_PUBLIC_E2E === "1") {
  // Importing is enoughâ€”the file calls server.listen()
  // eslint-disable-next-line @typescript-eslint/no-require-imports
  require("@/mocks/node");
}
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Header from "@/components/Header/Header";
import { ToastContainer } from "react-toastify";
import MswProvider from "./msw-provider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased flex justify-center`}
      >
        <Header />
        <ToastContainer />
        {process.env.NEXT_PUBLIC_E2E === "1" && <MswProvider />}

        <main className="max-w-[80%] w-full mt-[96px]">{children}</main>
      </body>
    </html>
  );
}
